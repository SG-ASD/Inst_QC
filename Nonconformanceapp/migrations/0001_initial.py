# Generated by Django 3.2.5 on 2022-07-29 11:17

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Nonconformance',
            fields=[
                ('ID', models.AutoField(primary_key=True, serialize=False)),
                ('Instrument_SN', models.CharField(blank=True, max_length=50)),
                ('Computer_SN', models.CharField(blank=True, max_length=50)),
                ('Name', models.CharField(blank=True, max_length=50)),
                ('Inspector', models.CharField(blank=True, max_length=50)),
                ('Start_Date', models.DateField(blank=True, null=True)),
                ('Doc_Num', models.CharField(blank=True, max_length=50)),
                ('Revision', models.IntegerField(blank=True, null=True)),
                ('Issue_Num', models.CharField(blank=True, max_length=50)),
                ('Category', models.CharField(blank=True, max_length=50)),
                ('Attachment', models.TextField(blank=True)),
                ('Power_SWFunction', models.TextField(blank=True)),
                ('Power_SWFunction_Detail', models.TextField(blank=True)),
                ('Power_LED', models.TextField(blank=True)),
                ('Power_LED_Detail', models.TextField(blank=True)),
                ('ArmZ_Code', models.TextField(blank=True)),
                ('ArmZ_Repetition', models.IntegerField(blank=True, null=True)),
                ('ArmZ_Value_L', models.FloatField(blank=True, null=True)),
                ('ArmZ_Value_R', models.FloatField(blank=True, null=True)),
                ('ArmZ_State', models.TextField(blank=True)),
                ('ArmDiff_Code', models.TextField(blank=True)),
                ('ArmDiff_Repetition', models.IntegerField(blank=True, null=True)),
                ('ArmDiff_Value', models.FloatField(blank=True, null=True)),
                ('ArmDiff_State', models.TextField(blank=True)),
                ('AdjustPIP_P1_Code', models.TextField(blank=True)),
                ('AdjustPIP_P1_Repetition', models.IntegerField(blank=True, null=True)),
                ('AdjustPIP_P1_Xdev', models.FloatField(blank=True, null=True)),
                ('AdjustPIP_P1_Xtilt', models.FloatField(blank=True, null=True)),
                ('AdjustPIP_P1_Ytilt', models.FloatField(blank=True, null=True)),
                ('AdjustPIP_P1_State', models.TextField(blank=True)),
                ('AdjustPIP_P2_Code', models.TextField(blank=True)),
                ('AdjustPIP_P2_Repetition', models.IntegerField(blank=True, null=True)),
                ('AdjustPIP_P2_Xdev', models.FloatField(blank=True, null=True)),
                ('AdjustPIP_P2_Xtilt', models.FloatField(blank=True, null=True)),
                ('AdjustPIP_P2_Ytilt', models.FloatField(blank=True, null=True)),
                ('AdjustPIP_P2_State', models.TextField(blank=True)),
                ('AdjustPIP_P3_Code', models.TextField(blank=True)),
                ('AdjustPIP_P3_Repetition', models.IntegerField(blank=True, null=True)),
                ('AdjustPIP_P3_Xdev', models.FloatField(blank=True, null=True)),
                ('AdjustPIP_P3_Xtilt', models.FloatField(blank=True, null=True)),
                ('AdjustPIP_P3_Ytilt', models.FloatField(blank=True, null=True)),
                ('AdjustPIP_P3_State', models.TextField(blank=True)),
                ('AdjustPIP_P4_Code', models.TextField(blank=True)),
                ('AdjustPIP_P4_Repetition', models.IntegerField(blank=True, null=True)),
                ('AdjustPIP_P4_Xdev', models.FloatField(blank=True, null=True)),
                ('AdjustPIP_P4_Xtilt', models.FloatField(blank=True, null=True)),
                ('AdjustPIP_P4_Ytilt', models.FloatField(blank=True, null=True)),
                ('AdjustPIP_P4_State', models.TextField(blank=True)),
                ('AdjustPIP_P5_Code', models.TextField(blank=True)),
                ('AdjustPIP_P5_Repetition', models.IntegerField(blank=True, null=True)),
                ('AdjustPIP_P5_Xdev', models.FloatField(blank=True, null=True)),
                ('AdjustPIP_P5_Xtilt', models.FloatField(blank=True, null=True)),
                ('AdjustPIP_P5_Ytilt', models.FloatField(blank=True, null=True)),
                ('AdjustPIP_P5_State', models.TextField(blank=True)),
                ('AdjustPIP_P6_Code', models.TextField(blank=True)),
                ('AdjustPIP_P6_Repetition', models.IntegerField(blank=True, null=True)),
                ('AdjustPIP_P6_Xdev', models.FloatField(blank=True, null=True)),
                ('AdjustPIP_P6_Xtilt', models.FloatField(blank=True, null=True)),
                ('AdjustPIP_P6_Ytilt', models.FloatField(blank=True, null=True)),
                ('AdjustPIP_P6_State', models.TextField(blank=True)),
                ('AdjustPIP_P7_Code', models.TextField(blank=True)),
                ('AdjustPIP_P7_Repetition', models.IntegerField(blank=True, null=True)),
                ('AdjustPIP_P7_Xdev', models.FloatField(blank=True, null=True)),
                ('AdjustPIP_P7_Xtilt', models.FloatField(blank=True, null=True)),
                ('AdjustPIP_P7_Ytilt', models.FloatField(blank=True, null=True)),
                ('AdjustPIP_P7_State', models.TextField(blank=True)),
                ('AdjustPIP_P8_Code', models.TextField(blank=True)),
                ('AdjustPIP_P8_Repetition', models.IntegerField(blank=True, null=True)),
                ('AdjustPIP_P8_Xdev', models.FloatField(blank=True, null=True)),
                ('AdjustPIP_P8_Xtilt', models.FloatField(blank=True, null=True)),
                ('AdjustPIP_P8_Ytilt', models.FloatField(blank=True, null=True)),
                ('AdjustPIP_P8_State', models.TextField(blank=True)),
                ('AdjustPIP_Code', models.TextField(blank=True)),
                ('AdjustPIP_Repetition', models.IntegerField(blank=True, null=True)),
                ('AdjustPIP_Fail', models.CharField(blank=True, max_length=20)),
                ('CheckPIP_P1_Code', models.TextField(blank=True)),
                ('CheckPIP_P1_Repetition', models.IntegerField(blank=True, null=True)),
                ('CheckPIP_P1_X', models.FloatField(blank=True, null=True)),
                ('CheckPIP_P1_Y', models.FloatField(blank=True, null=True)),
                ('CheckPIP_P1_Z', models.FloatField(blank=True, null=True)),
                ('CheckPIP_P1_State', models.TextField(blank=True)),
                ('CheckPIP_P2_Code', models.TextField(blank=True)),
                ('CheckPIP_P2_Repetition', models.IntegerField(blank=True, null=True)),
                ('CheckPIP_P2_X', models.FloatField(blank=True, null=True)),
                ('CheckPIP_P2_Y', models.FloatField(blank=True, null=True)),
                ('CheckPIP_P2_Z', models.FloatField(blank=True, null=True)),
                ('CheckPIP_P2_State', models.TextField(blank=True)),
                ('CheckPIP_P3_Code', models.TextField(blank=True)),
                ('CheckPIP_P3_Repetition', models.IntegerField(blank=True, null=True)),
                ('CheckPIP_P3_X', models.FloatField(blank=True, null=True)),
                ('CheckPIP_P3_Y', models.FloatField(blank=True, null=True)),
                ('CheckPIP_P3_Z', models.FloatField(blank=True, null=True)),
                ('CheckPIP_P3_State', models.TextField(blank=True)),
                ('CheckPIP_P4_Code', models.TextField(blank=True)),
                ('CheckPIP_P4_Repetition', models.IntegerField(blank=True, null=True)),
                ('CheckPIP_P4_X', models.FloatField(blank=True, null=True)),
                ('CheckPIP_P4_Y', models.FloatField(blank=True, null=True)),
                ('CheckPIP_P4_Z', models.FloatField(blank=True, null=True)),
                ('CheckPIP_P4_State', models.TextField(blank=True)),
                ('CheckPIP_P5_Code', models.TextField(blank=True)),
                ('CheckPIP_P5_Repetition', models.IntegerField(blank=True, null=True)),
                ('CheckPIP_P5_X', models.FloatField(blank=True, null=True)),
                ('CheckPIP_P5_Y', models.FloatField(blank=True, null=True)),
                ('CheckPIP_P5_Z', models.FloatField(blank=True, null=True)),
                ('CheckPIP_P5_State', models.TextField(blank=True)),
                ('CheckPIP_P6_Code', models.TextField(blank=True)),
                ('CheckPIP_P6_Repetition', models.IntegerField(blank=True, null=True)),
                ('CheckPIP_P6_X', models.FloatField(blank=True, null=True)),
                ('CheckPIP_P6_Y', models.FloatField(blank=True, null=True)),
                ('CheckPIP_P6_Z', models.FloatField(blank=True, null=True)),
                ('CheckPIP_P6_State', models.TextField(blank=True)),
                ('CheckPIP_P7_Code', models.TextField(blank=True)),
                ('CheckPIP_P7_Repetition', models.IntegerField(blank=True, null=True)),
                ('CheckPIP_P7_X', models.FloatField(blank=True, null=True)),
                ('CheckPIP_P7_Y', models.FloatField(blank=True, null=True)),
                ('CheckPIP_P7_Z', models.FloatField(blank=True, null=True)),
                ('CheckPIP_P7_State', models.TextField(blank=True)),
                ('CheckPIP_P8_Code', models.TextField(blank=True)),
                ('CheckPIP_P8_Repetition', models.IntegerField(blank=True, null=True)),
                ('CheckPIP_P8_X', models.FloatField(blank=True, null=True)),
                ('CheckPIP_P8_Y', models.FloatField(blank=True, null=True)),
                ('CheckPIP_P8_Z', models.FloatField(blank=True, null=True)),
                ('CheckPIP_P8_State', models.TextField(blank=True)),
                ('Cover_Safety_Front_State', models.TextField(blank=True)),
                ('Cover_Safety_Right_State', models.TextField(blank=True)),
                ('Cover_Safety_Detail', models.TextField(blank=True)),
                ('Barcode_Horizontal', models.CharField(blank=True, max_length=50)),
                ('Barcode_Vertical', models.CharField(blank=True, max_length=50)),
                ('Barcode_Detail', models.TextField(blank=True)),
                ('XYZ_Position_Code', models.TextField(blank=True)),
                ('XYZ_Position_State', models.TextField(blank=True)),
                ('XYZ_Position_Detail', models.TextField(blank=True)),
                ('HHS_temperature', models.TextField(blank=True)),
                ('HHS_RPM', models.TextField(blank=True)),
                ('HHS_Detail', models.TextField(blank=True)),
                ('Tip_Carrier', models.TextField(blank=True)),
                ('Tube_Carrier', models.TextField(blank=True)),
                ('MTP_Carrier', models.TextField(blank=True)),
                ('MFX_Carrier', models.TextField(blank=True)),
                ('Carrier_Detail', models.TextField(blank=True)),
                ('VFV_P1_300ul', models.TextField(blank=True)),
                ('VFV_P1_1000ul', models.TextField(blank=True)),
                ('VFV_P2_300ul', models.TextField(blank=True)),
                ('VFV_P2_1000ul', models.TextField(blank=True)),
                ('VFV_P3_300ul', models.TextField(blank=True)),
                ('VFV_P3_1000ul', models.TextField(blank=True)),
                ('VFV_P4_300ul', models.TextField(blank=True)),
                ('VFV_P4_1000ul', models.TextField(blank=True)),
                ('VFV_P5_300ul', models.TextField(blank=True)),
                ('VFV_P5_1000ul', models.TextField(blank=True)),
                ('VFV_P6_300ul', models.TextField(blank=True)),
                ('VFV_P6_1000ul', models.TextField(blank=True)),
                ('VFV_P7_300ul', models.TextField(blank=True)),
                ('VFV_P7_1000ul', models.TextField(blank=True)),
                ('VFV_P8_300ul', models.TextField(blank=True)),
                ('VFV_P8_1000ul', models.TextField(blank=True)),
                ('VFV_Detail', models.TextField(blank=True)),
                ('Others', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Ref_Nonconformance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Category', models.CharField(blank=True, max_length=50)),
                ('Type', models.CharField(blank=True, max_length=50)),
                ('Part_Num', models.CharField(blank=True, max_length=50)),
                ('Part_Name', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Add_Nonconformance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Category', models.CharField(blank=True, max_length=50)),
                ('Type', models.CharField(blank=True, max_length=50)),
                ('Part_Num', models.CharField(blank=True, max_length=50)),
                ('Part_Name', models.TextField(blank=True)),
                ('Part_Check', models.TextField(blank=True)),
                ('Part_Detail', models.TextField(blank=True)),
                ('Part_Location', models.CharField(blank=True, max_length=50)),
                ('Part_Qty', models.IntegerField(blank=True, null=True)),
                ('ID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Add', to='Nonconformanceapp.nonconformance')),
            ],
        ),
    ]
